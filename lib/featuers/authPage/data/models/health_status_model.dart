import '../../business/entities/health_status_entity.dart';

class HealthStatusModel extends HealthStatusEntity {
  HealthStatusModel({
    required int? patientId,
    required num? height,
    required String? heightUnit,
    required num? weight,
    required String? weightUnit,
    required int? gravida,
    required num? parity,
    required String? note,
    required dynamic firstDayLastPeriod,
    required num? regular,
    required num? sure,
    required dynamic expectedDeliveryDate,
    required num? bloodPressure,
    required num? diabetes,
    required String? previousCs,
    required String? previousSurgery,
    required num? familyBloodPressure,
    required num? twins,
    required String? herediaryDiseases,
    required num? familyDiabetes,
    required int? consanguinityId,
    required String? otherDiseases,
    required int? bloodTypeId,
    required num? firstBaby,
    required num? isPregnant,
    required String? husbandRelation,
  }) : super(patientId: patientId, height: height, heightUnit: heightUnit, weight: weight,
      weightUnit: weightUnit, gravida: gravida, parity: parity, note: note, firstDayLastPeriod: firstDayLastPeriod,
      regular: regular, sure: sure, expectedDeliveryDate: expectedDeliveryDate, bloodPressure: bloodPressure,
      diabetes: diabetes, previousCs: previousCs, previousSurgery: previousSurgery, familyBloodPressure: familyBloodPressure,
      twins: twins, herediaryDiseases: herediaryDiseases, familyDiabetes: familyDiabetes, consanguinityId: consanguinityId,
      otherDiseases: otherDiseases, bloodTypeId: bloodTypeId, firstBaby: firstBaby, isPregnant: isPregnant, husbandRelation: husbandRelation);


  HealthStatusModel copyWith({
    int? patientId,
    num? height,
    String? heightUnit,
    num? weight,
    String? weightUnit,
    int? gravida,
    num? parity,
    String? note,
    dynamic? firstDayLastPeriod,
    num? regular,
    num? sure,
    dynamic? expectedDeliveryDate,
    num? bloodPressure,
    num? diabetes,
    String? previousCs,
    String? previousSurgery,
    num? familyBloodPressure,
    num? twins,
    String? herediaryDiseases,
    num? familyDiabetes,
    int? consanguinityId,
    String? otherDiseases,
    int? bloodTypeId,
    num? firstBaby,
    num? isPregnant,
    String? husbandRelation
  }) {
    return HealthStatusModel(
        patientId: patientId ?? this.patientId,
        height: height ?? this.height,
        heightUnit: heightUnit ?? this.heightUnit,
        weight: weight ?? this.weight,
        weightUnit: weightUnit ?? this.weightUnit,
        gravida: gravida ?? this.gravida,
        parity: parity ?? this.parity,
        note: note ?? this.note,
        firstDayLastPeriod: firstDayLastPeriod ?? this.firstDayLastPeriod,
        regular: regular ?? this.regular,
        sure: sure ?? this.sure,
        expectedDeliveryDate: expectedDeliveryDate ?? this.expectedDeliveryDate,
        bloodPressure: bloodPressure ?? this.bloodPressure,
        diabetes: diabetes ?? this.diabetes,
        previousCs: previousCs ?? this.previousCs,
        previousSurgery: previousSurgery ?? this.previousSurgery,
        familyBloodPressure: familyBloodPressure ?? this.familyBloodPressure,
        twins: twins ?? this.twins,
        herediaryDiseases: herediaryDiseases ?? this.herediaryDiseases,
        familyDiabetes: familyDiabetes ?? this.familyDiabetes,
        consanguinityId: consanguinityId ?? this.consanguinityId,
        otherDiseases: otherDiseases ?? this.otherDiseases,
        bloodTypeId: bloodTypeId ?? this.bloodTypeId,
        firstBaby: firstBaby ?? this.firstBaby,
        isPregnant: isPregnant ?? this.isPregnant,
        husbandRelation: husbandRelation ?? this.husbandRelation
    );
  }

  factory HealthStatusModel.fromJson(Map<String, dynamic> json){
    return HealthStatusModel(
        patientId: json["patient_id"],
        height: json["height"],
        heightUnit: json["height_unit"],
        weight: json["weight"],
        weightUnit: json["weight_unit"],
        gravida: json["gravida"],
        parity: json["parity"],
        note: json["note"],
        firstDayLastPeriod: json["first_day_last_period"],
        regular: json["regular"],
        sure: json["sure"],
        expectedDeliveryDate: json["expected_delivery_date"],
        bloodPressure: json["blood_pressure"],
        diabetes: json["diabetes"],
        previousCs: json["previous_cs"],
        previousSurgery: json["previous_surgery"],
        familyBloodPressure: json["family_blood_pressure"],
        twins: json["twins"],
        herediaryDiseases: json["herediary_diseases"],
        familyDiabetes: json["family_diabetes"],
        consanguinityId: json["consanguinity_id"],
        otherDiseases: json["other_diseases"],
        bloodTypeId: json["blood_type_id"],
        firstBaby: json["first_baby"],
        isPregnant: json["is_pregnant"],
        husbandRelation: json["husband_relation"]
    );
  }

  Map<String, dynamic> toJson() => {
    "patient_id": patientId,
    "height": height,
    "height_unit": heightUnit,
    "weight": weight,
    "weight_unit": weightUnit,
    "gravida": gravida,
    "parity": parity,
    "note": note,
    "first_day_last_period": firstDayLastPeriod,
    "regular": regular,
    "sure": sure,
    "expected_delivery_date": expectedDeliveryDate,
    "blood_pressure": bloodPressure,
    "diabetes": diabetes,
    "previous_cs": previousCs,
    "previous_surgery": previousSurgery,
    "family_blood_pressure": familyBloodPressure,
    "twins": twins,
    "herediary_diseases": herediaryDiseases,
    "family_diabetes": familyDiabetes,
    "consanguinity_id": consanguinityId,
    "other_diseases": otherDiseases,
    "blood_type_id": bloodTypeId,
    "first_baby": firstBaby,
    "is_pregnant": isPregnant,
    "husband_relation": husbandRelation
  };

  @override
  String toString(){
    return "$patientId, $height, $heightUnit, $weight, $weightUnit, $gravida, $parity, $note, $firstDayLastPeriod, $regular, $sure, $expectedDeliveryDate, $bloodPressure, $diabetes, $previousCs, $previousSurgery, $familyBloodPressure, $twins, $herediaryDiseases, $familyDiabetes, $consanguinityId, $otherDiseases, $bloodTypeId, $firstBaby, $isPregnant, $husbandRelation ";
  }
}
